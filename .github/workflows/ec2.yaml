name: Deploy FastAPI to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.AI_SERVER_EC2_HOST }}
        username: ${{ secrets.AI_SERVER_EC2_USERNAME }}
        key: ${{ secrets.AI_SERVER_EC2_SSH_KEY }}
        script: |
          echo "작업 시작: $(date)" # 디버깅을 위한 타임스탬프

          PROJECT_DIR="/home/my-fast-api"

          # Git 설치 확인 및 설치 (Amazon Linux용)
          if ! command -v git &> /dev/null; then
            echo "git이 설치되어 있지 않습니다. 설치를 진행합니다..."
            sudo yum update -y # 패키지 목록 업데이트 (Amazon Linux)
            sudo yum install git -y # git 설치 (Amazon Linux)
            echo "git 설치 완료."
          else
            echo "git이 이미 설치되어 있습니다."
          fi

          if [ ! -d "$PROJECT_DIR" ]; then
            echo "📁 프로젝트 디렉토리를 생성하고 리포지토리를 clone합니다..."
            git clone https://github.com/kanggihoo/my-fast-api.git
            cd $PROJECT_DIR
          else
            echo "📁 기존 프로젝트 디렉토리를 사용합니다..."
            cd $PROJECT_DIR
            git pull origin main
          fi
          echo "저장소 클론 완료."

          # uv 설치 확인 및 설치
          if ! command -v uv &> /dev/null; then
            echo "uv가 설치되어 있지 않습니다. 설치를 진행합니다..."
            curl -LsSf https://astral.sh/uv/install.sh | sh
            export PATH="$HOME/.local/bin:$PATH"
            echo "uv 설치 및 PATH 설정 완료."
          else
            echo "uv가 이미 설치되어 있습니다."
          fi

           # Python 가상환경 확인 및 생성
          if [ ! -d "venv" ]; then
            echo "📦 Python 가상환경을 생성합니다..."
            
          fi

          # 가상환경 생성 및 의존성 설치
          echo "가상환경을 생성하고 의존성을 설치합니다..."
          # uv venv
          # source .venv/bin/activate
          uv sync
          echo "가상환경 및 의존성 설치 완료."

          # FastAPI 서버 백그라운드로 실행
          echo "FastAPI 서버를 시작합니다..."
          nohup uv run uvicorn main:app --host 0.0.0.0 --port 8000 > ../fastapi.log 2>&1 &
          echo "FastAPI 서버 시작 명령 실행 완료."

          # 프로세스 확인
          sleep 5
          if pgrep -f "uvicorn" > /dev/null; then
            echo "FastAPI 서버가 성공적으로 시작되었습니다!"
            echo "로그 확인: tail -f ~/fastapi.log"
          else
            echo "FastAPI 서버 시작에 실패했습니다. 로그를 확인하세요."
            tail -n 20 ../fastapi.log
            exit 1 # 서버 시작 실패 시 워크플로우 실패
          fi
          echo "배포 프로세스 성공적으로 완료: $(date)"
