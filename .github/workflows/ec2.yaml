name: Deploy FastAPI to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.AI_SERVER_EC2_HOST }}
        username: ${{ secrets.AI_SERVER_EC2_USERNAME }}
        key: ${{ secrets.AI_SERVER_EC2_SSH_KEY }}
        timeout: 300s # SSH 연결 및 스크립트 실행에 대한 타임아웃을 5분(300초)으로 설정합니다.
        script: |
          set -e # 이 줄을 추가하여 어떤 명령이 실패하면 즉시 스크립트를 종료합니다.
                 # 이렇게 하면 오류가 발생한 정확한 위치를 파악하기 쉽습니다.

          echo "작업 시작: $(date)" # 디버깅을 위한 타임스탬프

          # 작업 디렉토리 설정
          cd ~
          echo "현재 작업 디렉토리: $(pwd)"

          # uv 설치 확인 및 설치
          if ! command -v uv &> /dev/null; then
            echo "uv가 설치되어 있지 않습니다. 설치를 진행합니다..."
            curl -LsSf https://astral.sh/uv/install.sh | sh
            export PATH="$HOME/.local/bin:$PATH"
            echo "uv 설치 및 PATH 설정 완료."
          else
            echo "uv가 이미 설치되어 있습니다."
          fi

          # 프로젝트 디렉토리 설정 (필요에 따라 변경)
          PROJECT_DIR="fastapi-app"
          echo "프로젝트 디렉토리: $PROJECT_DIR"

          # 기존 FastAPI 프로세스 종료
          echo "기존 FastAPI 프로세스를 종료합니다..."
          # pkill 명령이 실패하더라도 스크립트가 계속 실행되도록 || true 추가
          pkill -f "uvicorn" || true
          echo "기존 FastAPI 프로세스 종료 시도 완료."

          # 기존 디렉토리가 있으면 삭제
          if [ -d "$PROJECT_DIR" ]; then
            echo "기존 프로젝트 디렉토리($PROJECT_DIR)를 삭제합니다..."
            rm -rf $PROJECT_DIR
            echo "기존 프로젝트 디렉토리 삭제 완료."
          else
            echo "기존 프로젝트 디렉토리($PROJECT_DIR)가 없습니다. 새로 클론합니다."
          fi

          # GitHub 저장소 클론
          echo "GitHub 저장소를 클론합니다..."
          # 중요: 저장소가 비공개인 경우, 아래 주석 처리된 라인처럼 GITHUB_TOKEN을 사용하여 인증해야 합니다.
          # envs: GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} 를 ssh-action with 블록에 추가하고
          # git clone https://oauth2:$GITHUB_TOKEN@github.com/${{ github.repository }}.git $PROJECT_DIR
          git clone https://github.com/${{ github.repository }}.git $PROJECT_DIR
          echo "저장소 클론 완료."

          # 클론된 프로젝트 디렉토리로 이동
          cd $PROJECT_DIR
          echo "프로젝트 디렉토리로 이동 완료: $(pwd)"

          # 가상환경 생성 및 의존성 설치
          echo "가상환경을 생성하고 의존성을 설치합니다..."
          uv venv
          source .venv/bin/activate
          uv sync
          echo "가상환경 및 의존성 설치 완료."

          # FastAPI 서버 백그라운드로 실행
          echo "FastAPI 서버를 시작합니다..."
          nohup uv run uvicorn main:app --host 0.0.0.0 --port 8000 > ../fastapi.log 2>&1 &
          echo "FastAPI 서버 시작 명령 실행 완료."

          # 프로세스 확인
          sleep 5
          if pgrep -f "uvicorn" > /dev/null; then
            echo "FastAPI 서버가 성공적으로 시작되었습니다!"
            echo "로그 확인: tail -f ~/fastapi.log"
          else
            echo "FastAPI 서버 시작에 실패했습니다. 로그를 확인하세요."
            tail -n 20 ../fastapi.log
            exit 1 # 서버 시작 실패 시 워크플로우 실패
          fi
          echo "배포 프로세스 성공적으로 완료: $(date)"
